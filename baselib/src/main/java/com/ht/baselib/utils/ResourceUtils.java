package com.ht.baselib.utils;

import android.content.Context;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

/**
 * <p>Resource工具类</p>
 *
 * @author hxm
 * @version 1.0 (2015/10/19)
 */
public class ResourceUtils {

    /**
     * 读取Assets资源中的文件
     *
     * @param context  上下文
     * @param fileName The name of the asset to open. This name can be hierarchical.
     * @return String
     */
    public static String getFileFromAssets(Context context, String fileName) {
        if (context == null || StringUtils.isBlank(fileName)) {
            return null;
        }
        StringBuilder s = new StringBuilder("");
        try {
            InputStreamReader in = new InputStreamReader(context.getResources()
                    .getAssets().open(fileName));
            BufferedReader br = new BufferedReader(in);
            String line;
            while ((line = br.readLine()) != null) {
                s.append(line);
            }
            return s.toString();
        } catch (IOException e) {
            e.printStackTrace();
            return null;
        }
    }

    /**
     * 读取raw资源中的文件
     *
     * @param context 上下文
     * @param resId   The resource identifier to open, as generated by the appt
     *                tool.
     * @return String
     */
    public static String geFileFromRaw(Context context, int resId) {
        if (context == null) {
            return null;
        }
        StringBuilder s = new StringBuilder();
        try {
            InputStreamReader in = new InputStreamReader(context.getResources()
                    .openRawResource(resId));
            BufferedReader br = new BufferedReader(in);
            String line;
            while ((line = br.readLine()) != null) {
                s.append(line);
            }
            return s.toString();
        } catch (IOException e) {
            e.printStackTrace();
            return null;
        }
    }

}

